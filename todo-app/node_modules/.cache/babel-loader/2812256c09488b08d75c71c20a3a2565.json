{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  count: 0\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.count += 1;\n    },\n    decrement: state => {\n      state.count -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.count += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","count","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["/Users/nirmalsilwal/Desktop/MIU/WAA/workshop1/sakai-submission/waa-june-2022-todo-workshop/todo-app/src/components/redux/CounterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  count: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.count += 1\n    },\n    decrement: (state) => {\n      state.count -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.count += action.payload\n    },\n  },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SADgC;EAEtCH,YAFsC;EAGtCI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MACpBA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CAHO;IAIRM,SAAS,EAAGD,KAAD,IAAW;MACpBA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CANO;IAORO,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;MACpCH,KAAK,CAACL,KAAN,IAAeQ,MAAM,CAACC,OAAtB;IACD;EATO;AAH4B,CAAD,CAAhC;AAgBP,OAAO,MAAM;EAAEL,SAAF;EAAaE,SAAb;EAAwBC;AAAxB,IAA8CN,YAAY,CAACS,OAAjE;AAEP,eAAeT,YAAY,CAACU,OAA5B"},"metadata":{},"sourceType":"module"}